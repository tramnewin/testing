# This is a basic workflow to help you get started with Actions

name: Config notification and build/test

# Controls when the workflow will run
on: [push,pull_request]
#    branches:
#      - confirmation 
  
  # Allows you to run this workflow manually from the Actions tab


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  pr_notifying:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout code
        uses: actions/checkout@v3
      #sending message to discord server
      - name: send message to discord server
        uses: ./.github/actions/discord_message
        with:
          webhook_id: ${{ secrets.WEBHOOK_ID }}
          webhook_token: ${{ secrets.WEBHOOK_TOKEN }}
          color: "#1ABC9C"
          username: "GitHub Action"
          message: ${{github.head_ref}} has ${{ github.event_name }}ed onto the repository
  giphy-generator:
    runs-on: ubuntu-latest
    steps:
      - name: GIPHY generator
        id: giphy_generator
        uses: iamhughes/giphy-generator@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
          GIPHY_TOKEN: ${{ secrets.GIPHY_TOKEN }} # This token should be created on giphy.com
        with:
          rating: 'g'
          lang: 'en'

  buildandtest:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3
      - name: build and test the code
        uses: ./.github/actions/build_and_test
        with: 
          repo-token: ${{secrets.GITHUB_TOKEN}}

      - name: Set Release EVs
        id: release_values
        shell: bash
        run: |
          device=$(echo helloworld)
          build_type="private"
          echo "::set-output name=build_name::$device-$build_type"
          echo "::set-output name=device::$device"
          echo "::set-output name=build_type::$build_type"
        
      - name: Upload Artifacts
        shell: bash
        run: |
          build_type="private"

          version=${{ steps.release_values.outputs.version }}
          build_name=${{ steps.release_values.outputs.build_name }}
          echo version
          echo $version

